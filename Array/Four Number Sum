// O(N^2) time | O(N^2) space
function fourNumberSum(array, targetSum) {
  let hashTable = {};
  let result = [];

  for (let i = 1; i < array.length - 1; i++) {
    for (let j = i + 1; j < array.length; j++) {
      const currentSum = array[i] + array[j];
      const difference = targetSum - currentSum;
      if (difference in hashTable) {
        for (let pair of hashTable[difference]) {
          result.push(pair.concat([array[i], array[j]]));
        }
      }
    }
    for (let k = 0; k < i; k++) {
      const currentSum = array[k] + array[i];
      if (!(currentSum in hashTable)) {
        hashTable[currentSum] = [[array[k], array[i]]]
      } else {
        hashTable[currentSum].push([array[k], array[i]]);
      }
    }
  }
  return result;
}

// Do not edit the line below.
exports.fourNumberSum = fourNumberSum;
