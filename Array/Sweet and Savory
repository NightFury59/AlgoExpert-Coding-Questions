// Sorted dishes - [-5, -3, 1, 7]
function sweetAndSavory(dishes, target) {
  dishes.sort((a, b) => a - b);
  let bestPair = [0, 0];
  let bestDiff = Infinity;
  let left = 0;
  let right = dishes.length - 1

  while (dishes[left] < 0 && dishes[right] > 0) {
    const dishSum = dishes[left] + dishes[right];
    if (dishSum === target) {
      bestPair = [dishes[left], dishes[right]];
    }
    if (dishSum > target) {
      right--;
    } else {
    const currDiff = target - dishSum;
    if (currDiff < bestDiff) {
      bestPair = [dishes[left], dishes[right]];
      bestDiff = currDiff;
    }
    left++;
    }
  }
  return bestPair;
}

// Do not edit the line below.
exports.sweetAndSavory = sweetAndSavory;
