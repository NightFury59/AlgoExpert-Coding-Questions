#Time Complexity O(n) | Space Complexity O(1)

def longestSubarrayWithSum(array, targetSum):
    indices = []

    currentSubarraySum = 0
    startingIndex = 0
    endingIndex = 0

    while endingIndex < len(array):
        currentSubarraySum += array[endingIndex]

        while startingIndex < endingIndex and currentSubarraySum > targetSum:
            currentSubarraySum -= array[startingIndex]
            startingIndex += 1

        if currentSubarraySum == targetSum:
            if len(indices) == 0 or indices[1] - indices[0] < endingIndex - startingIndex:
                    indices = [startingIndex, endingIndex]

        endingIndex += 1

    return indices
    
